variables:
  GO_VERSION: "1.23"

stages:
  - tests
  - release
  - build

.go:
  image: gitlab-registry.***REMOVED***/docker/golang/go-builder:$GO_VERSION
  stage: tests
  variables:
    CC: "gcc"
    GIT_DEPTH: "3"
    GIT_CLONE_PATH: "$CI_BUILDS_DIR/$CI_PROJECT_PATH"
    GOPATH: "${CI_PROJECT_DIR}/.cache/go"
    GOCACHE: "${CI_PROJECT_DIR}/.cache/gocache"
    GOPROXY: "https://goproxy.s.***REMOVED***"
    GOSUMDB: "off"
    GOLANGCI_LINT_CACHE: "${CI_PROJECT_DIR}/.cache/golangci-lint"
  cache:
    key: "go-modules-cache"
    policy: pull
    paths:
      - .cache/go
      - .cache/gocache
      - .cache/golangci-lint

linter:
  extends: .go
  stage: tests
  script:
    - make lint
  except:
    - tags
    - master

go tests(race):
  extends: .go
  stage: tests
  tags: [ tests, k8s ]
  variables:
    KUBERNETES_MEMORY_LIMIT: 32Gi
    KUBERNETES_CPU_LIMIT: 16
    GOMAXPROCS: "16"
  script:
    - make ci-tests-race
  allow_failure: false
  except:
    - tags

go tests:
  extends: .go
  variables:
    GOMAXPROCS: "4"
  stage: tests
  script:
    - make ci-tests
  artifacts:
    when: always
    reports:
      junit: junit.xml
    paths:
      - ./cover.out
  coverage: /^total:\s+\(statements\)\s+\d+.\d+%$/
  allow_failure: false
  except:
    - tags

.go cache:
  extends: .go
  cache:
    policy: push
    when: always
  allow_failure: true
  artifacts:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
  needs: [ ]
  before_script:
    - mkdir -p ${CI_PROJECT_DIR}/.cache/ || true
  script:
    - git config --global credential.helper store && echo "https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}" > ~/.git-credentials
    - go mod download all
    - go build ./cmd/...
    # Setup golangci-lint cache
    - make lint > /dev/null || true
    - make mock > /dev/null || true
  after_script:
    - du -h .cache | sort -h

go cache:
  extends: ".go cache"
  stage: tests

check generate:
  extends: .go
  stage: tests
  script:
    - make mock
    - go generate ./...
    - git diff --exit-code
  allow_failure: false
  except:
    - tags

check mod:
  extends: .go
  stage: tests
  script:
    - go mod download && go mod tidy
    - go mod verify
    - git diff --exit-code
  allow_failure: false
  except:
    - tags

.tag:
  stage: release
  before_script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
  after_script:
    - git push --tags https://token:$REPOSITORY_PUSH_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
    - if: $CI_COMMIT_TAG
      when: never

patch:
  extends: .tag
  script:
    - ./tools/release.sh patch skip-edit

minor:
  extends: .tag
  script:
    - ./tools/release.sh minor skip-edit

major:
  extends: .tag
  script:
    - ./tools/release.sh major skip-edit

build-binaries:
  extends: .go
  stage: build
  script:
    - VERSION="$CI_COMMIT_TAG" make build-binaries
  artifacts:
    paths:
      - ./bin/amd64/seq-db
      - ./bin/amd64/distribution
      - ./bin/amd64/analyzer
    expire_in: 1 day
    when: on_success
  rules:
    - if: $CI_COMMIT_TAG

build-and-push-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$IMAGES_REGISTRY_USERNAME\",\"password\":\"$IMAGES_REGISTRY_DEPLOY_TOKEN\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --log-timestamp
      --push-retry=5
      --cache="true"
      --cache-repo="ghcr.io/ozontech/seq-db/cache"
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination ghcr.io/ozontech/seq-db:${CI_COMMIT_TAG}
      --destination ghcr.io/ozontech/seq-db:latest
  needs:
    - build-binaries
  rules:
    - if: $CI_COMMIT_TAG
